version: 2.1

orbs:
  docker: circleci/docker@1.0.1

jobs:
  compute-version:
    docker:
      - image: alpine
    steps:
      - checkout
      - run:
          name: Compute a version designator and write it to a text file
          command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
      - persist_to_workspace:
          root: ./
          paths:
            - ./

  install-dependencies:
    docker:
      - image: node:current-alpine
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: yarn-deps-{{ checksum "yarn.lock" }}-{{ epoch }}
      - store_artifacts:
          path: yarn.lock
      - persist_to_workspace:
          root: ./
          paths:
            - ./

  build-production:
    docker:
      - image: node:current-alpine
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Production build
          command: |
            export __BUILD_VERSION="$(cat version.txt)"
            yarn build
      - store_artifacts:
          path: dist/server.js
      - persist_to_workspace:
          root: ./
          paths:
            - ./

  build-docker-image:
    machine:
      image: ubuntu-1604:202004-01
      docker_layer_caching: true
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Setup __BUILD_VERSION envvar
          command: |
            echo "export __BUILD_VERSION=\"$(cat version.txt)\"" >> $BASH_ENV
      - docker/check
      - docker/build:
          image: makotom/decode-server-preview
          tag: $__BUILD_VERSION
      - docker/push:
          image: makotom/decode-server-preview
          tag: $__BUILD_VERSION
          digest-path: digest.txt
      - run:
          name: Show Docker image digest
          command: cat digest.txt

  test:
    docker:
      - image: node:current-alpine
    parallelism: 2
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run tests
          command: |
            circleci tests glob '**/*.test.ts' | circleci tests split --split-by timings | xargs yarn test:ci
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - compute-version
      - install-dependencies:
          requires:
            - compute-version
      - build-production:
          requires:
            - install-dependencies
      - build-docker-image:
          context: docker-hub
          requires:
            - build-production
      - test:
          requires:
            - install-dependencies
      - deploy-approval:
          type: approval
          requires:
            - build-production
            - build-docker-image
            - test
